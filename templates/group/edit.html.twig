{% extends 'base.html.twig' %}

{% block title %}Edit Group{% endblock %}
{% block mainHeader %}
    <div
        class="text-center bg-image"
        {% if group.image is defined and group.image is not null and group.image.image is not null %}
            style="background-image: url('{{ asset('uploads/' ~ group.image.image) }}'); height: 200px"
        {% endif %}
    >
    </div>

{% endblock %}

{% block body %}
    <div class="container py-5">

        <div class="row">
            <div class="col-lg-3" style="margin-top: 15%;">
                <div class=" mb-3">
                    <div class="text-center">
                        <div id="map" style="width: 100%; height: 400px;"></div>
                    </div>
                </div>
            </div>
            <div class="col-lg-9">
                <div class="add_new_group_header">
                    <h2 class="add_new_group_title">
                        Modifier votre groupe
                    </h2>
                    <div class="btn_container">
                        <a class="btn back" href="{{ path('group_show',{'id': group.id}) }}" style="background-color: #c92240; color: white; padding: 7px 10px; ">back to list</a>
                        <a href="#" data-href="{{ path('group_edit', {'id': group.id}) }}" class="btn edit" style="background-color: #66B1F1; color: white; padding: 7px 10px; ">{{ button_label|default('Save') }}</a>

                    </div>
                    {{ include('group/_form.html.twig', {'button_label': 'Update'}) }}
                </div>

            </div>
        </div>
    </div>





{#    {{ include('group/_delete_form.html.twig') }}#}
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script>

        $(document).ready(function (){
            var url = "https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v5.0.0/mapbox-gl-geocoder.min.js";
            $.getScript( url, function() {
                const map = new mapboxgl.Map({
                    container: 'map',
                    style: 'mapbox://styles/mapbox/streets-v11',
                    center: [-79.4512, 43.6568],
                    zoom: 13
                });

                var geocoder = new MapboxGeocoder({
                    accessToken: mapboxgl.accessToken,
                    mapboxgl: mapboxgl,
                    types: 'country,region,place,postcode,locality,neighborhood,district,address,poi',
                });


                {% if group.place %}
                mapboxgl.accessToken = 'pk.eyJ1IjoicHJlc2xleWRldiIsImEiOiJjbDZjaWxhMWUwNTJ6M2VxaXhxYWF4Z3h6In0.LM5TC2hXXpQUzk8fHrVyKg';
                const mapboxClient = mapboxSdk({ accessToken: mapboxgl.accessToken });
                mapboxClient.geocoding
                    .forwardGeocode({
                        query: '{{ group.place.adress ~ ' ' ~ group.place.locality ~ ' ' ~ group.place.country }}',
                        autocomplete: false,
                        limit: 1
                    })
                    .send()
                    .then((response) => {
                        if (
                            !response ||
                            !response.body ||
                            !response.body.features ||
                            !response.body.features.length
                        ) {
                            console.error('Invalid response:');
                            console.error(response);
                            return;
                        }
                        const feature = response.body.features[0];

                        const map = new mapboxgl.Map({
                            container: 'map',
                            style: 'mapbox://styles/mapbox/streets-v11',
                            center: feature.center,
                            zoom: 10
                        });
                        const featureCollection = feature;
                        const lng = featureCollection.geometry.coordinates[0];
                        const lat = featureCollection.geometry.coordinates[1];
                        const id = featureCollection.id;
                        const address = featureCollection.place_name;
                        const address_level1 = featureCollection.text;

                        $(document).find('#group_place_lat').val(lat);
                        $(document).find('#group_place_lng').val(lng);
                        $(document).find('#group_place_areaRegion').val(address_level1);
                        $(document).find('#group_place_placeId').val(id);
                        $(document).find('#group_place_Adress').val(address);

// Create a marker and add it to the map.
                        new mapboxgl.Marker().setLngLat(['{{ group.place.lng }}', '{{ group.place.lat }}']).setPopup(new mapboxgl.Popup().setHTML("<h1>{{ group.place.adress }}</h1>")).addTo(map);
                    });
                {% endif %}


                // Add the control to the map.
                map.addControl(
                    geocoder
                );
                geocoder.on('result', (e) => {
                    const featureCollection = e.result;
                    const lng = featureCollection.geometry.coordinates[0];
                    const lat = featureCollection.geometry.coordinates[1];
                    const id = featureCollection.id;
                    const address = featureCollection.place_name;
                    const address_level1 = featureCollection.text;
                    $(document).find('#group_place_lat').val(lat);
                    $(document).find('#group_place_lng').val(lng);
                    $(document).find('#group_place_areaRegion').val(address_level1);
                    $(document).find('#group_place_placeId').val(id);
                    $(document).find('#group_place_Adress').val(address);
                });
            });
            $(document).on('click', '.btn:not(.back)', function (e){
                e.stopImmediatePropagation();
                e.preventDefault();
                console.log('ici la mon gars');
                var form = $(document).find('form')[0];
                console.log(form)
                var url = $(this).attr('data-href');
                var data = new FormData(form);
                //var data = new form.serialize();

                console.log(url);
                console.log(data);

                $.ajax({
                    type: "POST",
                    processData: false,                          // Using FormData, no need to process data.
                    contentType:false,
                    url: url,
                    data: data,
                    success: function (data) {
                        console.log(data);
                        window.location.replace("{{ path('group_show',{'id': group.id}) }}");
                    }
                });

            });
            $("select").selectize();

        })
    </script>

{% endblock %}
