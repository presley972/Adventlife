{% extends 'base.html.twig' %}

{% block title %}Group{% endblock %}
{% block mainHeader %}
    <div
        id="intro-example"
        class="p-5 text-center bg-image"
        style="background-image: url('{{ asset('uploads/' ~ group.image.image) }}');"
    >
        <div class="mask" style="background-color: rgba(0, 0, 0, 0.7);">
            <div class="d-flex justify-content-center align-items-center h-100">
                <div class="text-white">
                    <h1 class="mb-3">{{ group.title }}</h1>
                    <h5 class="mb-4">{{ group.description }}</h5>
                    <a
                        class="btn btn-outline-light btn-lg m-2"
                        href="https://www.youtube.com/watch?v=c9B4TPnak1A"
                        role="button"
                        rel="nofollow"
                        target="_blank"
                    >Start tutorial</a
                    >
                    <a
                        class="btn btn-outline-light btn-lg m-2"
                        href="{{ path('group_new') }}"
                        target="_blank"
                        role="button"
                    >creer un group de maison</a
                    >
                </div>
            </div>
        </div>
    </div>

{% endblock %}

{% block body %}

    <style>
        body { margin: 0; padding: 0; }
        #map { position: absolute; left: 0; width: 100%;height: 20% }
    </style>

    <a href="{{ path('group_blog_post_new', { 'id': group.id}) }}">ajouter un post</a>

    <div class="container">
        <main>
            <h1>List des Post</h1>
            {#{{ dump( group.place.lat) }}
            {{ dump( group.place.lng) }}
            {{ dump( group.place.country) }}
            {{ dump( group.place.locality) }}#}

            <div id="map"></div>
            <div class="row row-cols-1 row-cols-md-2 g-4">
                {% for post in group.blogPosts %}
                    <div class="card bg-dark text-white">
                        <img src="{{ asset('uploads/' ~ post.images|first.image) }}" class="card-img" alt="...">
                        <div class="card-img-overlay">
                            <h5 class="card-title">{{ post.name }}</h5>
                            <p class="card-text">{{ post.description }}</p>
                            <p class="card-text">{{ post.owner.email }} - {{ post.createdAt | date}}</p>
                            <a href=" {{ path('blog_post_show', {'id': post.id}) }}" class="btn btn-primary btn-subscription"> Accedez</a>

                        </div>
                    </div>
                    {#<div class="col">
                        <div class="card h-100">
                            {% if group.image %}
                                <img src="{{ asset('uploads/' ~ group.image.image) }}" class="card-img-top" alt="...">
                            {% endif %}
                            <div class="card-body">
                                <h5 class="card-title">{{ post.name }}</h5>
                                <p class="card-text">{{ post.description }}</p>
                            </div>
                        </div>
                    </div>#}
                {% endfor %}
            </div>
        </main>
    </div>
    <a href="{{ path('group_index') }}">back to list</a>

    <a href="{{ path('group_edit', {'id': group.id}) }}">edit</a>

    {{ include('group/_delete_form.html.twig') }}
    <script>
        {% if group.place %}
        mapboxgl.accessToken = 'pk.eyJ1IjoicHJlc2xleWRldiIsImEiOiJjbDZjaWxhMWUwNTJ6M2VxaXhxYWF4Z3h6In0.LM5TC2hXXpQUzk8fHrVyKg';
        const mapboxClient = mapboxSdk({ accessToken: mapboxgl.accessToken });
        mapboxClient.geocoding
            .forwardGeocode({
                query: '{{ group.place.adress ~ ' ' ~ group.place.locality ~ ' ' ~ group.place.country }}',
                autocomplete: false,
                limit: 1
            })
            .send()
            .then((response) => {
                if (
                    !response ||
                    !response.body ||
                    !response.body.features ||
                    !response.body.features.length
                ) {
                    console.error('Invalid response:');
                    console.error(response);
                    return;
                }
                const feature = response.body.features[0];

                const map = new mapboxgl.Map({
                    container: 'map',
                    style: 'mapbox://styles/mapbox/streets-v11',
                    center: feature.center,
                    zoom: 10
                });

// Create a marker and add it to the map.
                new mapboxgl.Marker().setLngLat(['{{ group.place.lng }}', '{{ group.place.lat }}']).setPopup(new mapboxgl.Popup().setHTML("<h1>{{ group.place.adress }}</h1>")).addTo(map);
            });
        {% endif %}

    </script>
{% endblock %}
